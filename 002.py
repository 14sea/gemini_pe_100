"""
Solves the Project Euler Problem 2.

Question:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

Solution Idea:
We can generate Fibonacci numbers one by one and check two conditions:
1. The number should not exceed four million.
2. The number should be even.

We maintain a running sum of the even-valued Fibonacci numbers.
We start with the first two Fibonacci numbers, 1 and 2.
We continue generating the next Fibonacci number by adding the previous two, until the number exceeds four million.
If the current number is even, we add it to our sum.
"""

def solve():
    a, b = 1, 2
    even_sum = 0
    while a <= 4000000:
        if a % 2 == 0:
            even_sum += a
        a, b = b, a + b
    print(even_sum)

solve()