"""
Project Euler Problem 28: Number spiral diagonals

Problem:
Starting with the number 1 and moving to the right in a clockwise direction a 5 by 5 spiral is formed as follows:

21 22 23 24 25
20  7  8  9 10
19  6  1  2 11
18  5  4  3 12
17 16 15 14 13

It can be verified that the sum of the numbers on the diagonals is 101.
What is the sum of the numbers on the diagonals in a 1001 by 1001 spiral formed in the same way?

Solution Idea:
Instead of constructing the entire spiral, we can find a mathematical pattern for the numbers on the diagonals.

1.  The spiral is built in layers or rings around the central '1'.
    - The first layer completes a 3x3 spiral.
    - The second layer completes a 5x5 spiral.
    - The k-th layer completes a (2k+1)x(2k+1) spiral.

2.  Let's look at the corner values of each layer:
    - **Center**: 1
    - **Layer 1 (3x3)**: The corners are 3, 5, 7, 9. The gap between them is 2. The side length is 3, so the gap is `3-1`.
    - **Layer 2 (5x5)**: The corners are 13, 17, 21, 25. The gap between them is 4. The side length is 5, so the gap is `5-1`.

3.  **General Pattern**: For a spiral of size `s x s` (where `s` is an odd number like 3, 5, 7, ...), the four corner numbers are generated by starting from the corner of the previous, smaller spiral and adding the new step size `(s-1)` four times.

4.  **Algorithm**:
    - We can start with a sum of 1 (the center).
    - We can then loop through the spiral layers, from 3x3 up to 1001x1001. The side length `s` will go from 3 to 1001 in steps of 2.
    - For each layer `s`, the step size to the next corner is `s - 1`.
    - We keep track of the `current_number` on the diagonal. We start with 1.
    - In each layer `s`, we add the step `(s-1)` to the `current_number` four times, and add each new `current_number` to our total sum.
"""

def solve():
    """
    Calculates the sum of the numbers on the diagonals in a 1001 by 1001 spiral.
    """
    limit = 1001
    
    total_sum = 1
    current_number = 1
    
    # Loop through the layers of the spiral, from 3x3 up to 1001x1001
    # The side length 's' increases by 2 for each layer.
    for s in range(3, limit + 1, 2):
        step = s - 1
        # There are 4 corners in each layer
        for _ in range(4):
            current_number += step
            total_sum += current_number
            
    return total_sum

if __name__ == "__main__":
    print(solve())
